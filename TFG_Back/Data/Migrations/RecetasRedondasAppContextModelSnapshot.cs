// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecetasRedondas.Models;

#nullable disable

namespace RecetasRedondas.Data.Migrations
{
    [DbContext(typeof(RecetasRedondasAppContext))]
    partial class RecetasRedondasAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecetasRedondas.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PuntuacionPromedio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Visible")
                        .HasColumnType("bit");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Descripcion = "Platos deliciosos de carne",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(4941),
                            Icono = "https://ik.imagekit.io/Mariocanizares/carne.webp?updatedAt=1726218723472",
                            NombreCategoria = "Carnes",
                            PuntuacionPromedio = 4.5m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 2,
                            Descripcion = "Platos variados con arroz",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5003),
                            Icono = "https://ik.imagekit.io/Mariocanizares/arroz.png?updatedAt=1726218452623",
                            NombreCategoria = "Arroces",
                            PuntuacionPromedio = 4.8m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 3,
                            Descripcion = "Guisos tradicionales y caseros",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5007),
                            Icono = "https://ik.imagekit.io/Mariocanizares/guisos.png?updatedAt=1726218800757",
                            NombreCategoria = "Guisos",
                            PuntuacionPromedio = 4.7m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 4,
                            Descripcion = "Platos exquisitos de mariscos",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5011),
                            Icono = "https://ik.imagekit.io/Mariocanizares/marisco.webp?updatedAt=1726218800789",
                            NombreCategoria = "Mariscos",
                            PuntuacionPromedio = 4.6m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 5,
                            Descripcion = "Platos frescos de pescados",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5014),
                            Icono = "https://ik.imagekit.io/Mariocanizares/pescado.png?updatedAt=1726218801946",
                            NombreCategoria = "Pescados",
                            PuntuacionPromedio = 4.7m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 6,
                            Descripcion = "Platos deliciosos de pasta",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5017),
                            Icono = "https://ik.imagekit.io/Mariocanizares/pasta.png?updatedAt=1726218800772",
                            NombreCategoria = "Pastas",
                            PuntuacionPromedio = 4.5m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 7,
                            Descripcion = "Frescas y saludables ensaladas",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5020),
                            Icono = "https://ik.imagekit.io/Mariocanizares/carne.webp?updatedAt=1726218723472",
                            NombreCategoria = "Ensaladas",
                            PuntuacionPromedio = 4.6m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 8,
                            Descripcion = "Reconfortantes sopas y cremas",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5022),
                            Icono = "https://ik.imagekit.io/Mariocanizares/sopa.png?updatedAt=1726218800718f",
                            NombreCategoria = "Sopas",
                            PuntuacionPromedio = 4.7m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 9,
                            Descripcion = "Variedad de pizzas caseras",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5025),
                            Icono = "https://ik.imagekit.io/Mariocanizares/pizza.png?updatedAt=1726218802077",
                            NombreCategoria = "Pizzas",
                            PuntuacionPromedio = 4.8m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 10,
                            Descripcion = "Creativos y deliciosos sandwiches",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5027),
                            Icono = "https://ik.imagekit.io/Mariocanizares/sandwitches.png?updatedAt=1726218800723",
                            NombreCategoria = "Sandwiches",
                            PuntuacionPromedio = 4.5m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 11,
                            Descripcion = "Platos saludables de verduras",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5030),
                            Icono = "https://ik.imagekit.io/Mariocanizares/verduras.png?updatedAt=1726218800742",
                            NombreCategoria = "Verduras",
                            PuntuacionPromedio = 4.6m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 12,
                            Descripcion = "Salsas para acompañar tus platos",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5032),
                            Icono = "https://ik.imagekit.io/Mariocanizares/salsas.png?updatedAt=1726218800564",
                            NombreCategoria = "Salsas",
                            PuntuacionPromedio = 4.7m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 13,
                            Descripcion = "Dulces y sabrosos postres",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5034),
                            Icono = "https://ik.imagekit.io/Mariocanizares/postres.png?updatedAt=1726218800753",
                            NombreCategoria = "Postres",
                            PuntuacionPromedio = 4.8m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 14,
                            Descripcion = "Bebidas refrescantes y cócteles",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5037),
                            Icono = "https://ik.imagekit.io/Mariocanizares/bebidas.png?updatedAt=1726218678224",
                            NombreCategoria = "Bebidas",
                            PuntuacionPromedio = 4.7m,
                            Visible = true
                        },
                        new
                        {
                            IdCategoria = 15,
                            Descripcion = "Platos tradicionales de legumbres",
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5039),
                            Icono = "https://ik.imagekit.io/Mariocanizares/legumbres.png?updatedAt=1726218800787",
                            NombreCategoria = "Legumbres",
                            PuntuacionPromedio = 4.6m,
                            Visible = true
                        });
                });

            modelBuilder.Entity("RecetasRedondas.Models.Ingrediente", b =>
                {
                    b.Property<int>("IdIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdIngrediente"));

                    b.Property<decimal>("Calorias")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ContieneAlergenos")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreIngrediente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAlergeno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdIngrediente");

                    b.ToTable("Ingredientes");

                    b.HasData(
                        new
                        {
                            IdIngrediente = 1,
                            Calorias = 15m,
                            ContieneAlergenos = false,
                            FechaExpiracion = new DateTime(2024, 10, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5404),
                            NombreIngrediente = "Lechuga",
                            TipoAlergeno = "",
                            UnidadMedida = "g"
                        },
                        new
                        {
                            IdIngrediente = 2,
                            Calorias = 130m,
                            ContieneAlergenos = false,
                            FechaExpiracion = new DateTime(2025, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5416),
                            NombreIngrediente = "Arroz",
                            TipoAlergeno = "",
                            UnidadMedida = "g"
                        },
                        new
                        {
                            IdIngrediente = 3,
                            Calorias = 2m,
                            ContieneAlergenos = false,
                            FechaExpiracion = new DateTime(2025, 3, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5419),
                            NombreIngrediente = "Café",
                            TipoAlergeno = "",
                            UnidadMedida = "ml"
                        });
                });

            modelBuilder.Entity("RecetasRedondas.Models.MenuSemanal", b =>
                {
                    b.Property<int>("IdMenuSemanal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenuSemanal"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdMenuSemanal");

                    b.ToTable("MenusSemanales");

                    b.HasData(
                        new
                        {
                            IdMenuSemanal = 1,
                            Descripcion = "Menú semanal de prueba",
                            FechaFin = new DateTime(2024, 9, 20, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5477),
                            FechaInicio = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5474),
                            IdUsuario = 1
                        });
                });

            modelBuilder.Entity("RecetasRedondas.Models.MenuSemanalReceta", b =>
                {
                    b.Property<int>("IdMenuSemanal")
                        .HasColumnType("int");

                    b.Property<int>("IdReceta")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("IdMenuSemanal", "IdReceta", "Fecha");

                    b.ToTable("MenuSemanalRecetas");

                    b.HasData(
                        new
                        {
                            IdMenuSemanal = 1,
                            IdReceta = 1,
                            Fecha = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5499)
                        },
                        new
                        {
                            IdMenuSemanal = 1,
                            IdReceta = 2,
                            Fecha = new DateTime(2024, 9, 14, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5502)
                        },
                        new
                        {
                            IdMenuSemanal = 1,
                            IdReceta = 3,
                            Fecha = new DateTime(2024, 9, 15, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5505)
                        });
                });

            modelBuilder.Entity("RecetasRedondas.Models.Receta", b =>
                {
                    b.Property<int>("IdReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReceta"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsVegano")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Instrucciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NivelDificultad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoPreparacion")
                        .HasColumnType("int");

                    b.HasKey("IdReceta");

                    b.ToTable("Recetas");

                    b.HasData(
                        new
                        {
                            IdReceta = 1,
                            Descripcion = "Ensalada fresca con aderezo César",
                            EsVegano = false,
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5331),
                            IdCategoria = 1,
                            Instrucciones = "Instrucciones para Ensalada César",
                            NivelDificultad = 1m,
                            Nombre = "Ensalada César",
                            TiempoPreparacion = 20
                        },
                        new
                        {
                            IdReceta = 2,
                            Descripcion = "Arroz tradicional español con mariscos",
                            EsVegano = false,
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5335),
                            IdCategoria = 2,
                            Instrucciones = "Instrucciones para Paella",
                            NivelDificultad = 2m,
                            Nombre = "Paella",
                            TiempoPreparacion = 60
                        },
                        new
                        {
                            IdReceta = 3,
                            Descripcion = "Postre italiano con café y mascarpone",
                            EsVegano = false,
                            FechaCreacion = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5340),
                            IdCategoria = 3,
                            Instrucciones = "Instrucciones para Tiramisú",
                            NivelDificultad = 3m,
                            Nombre = "Tiramisú",
                            TiempoPreparacion = 30
                        });
                });

            modelBuilder.Entity("RecetasRedondas.Models.RecetaIngrediente", b =>
                {
                    b.Property<int>("IdReceta")
                        .HasColumnType("int");

                    b.Property<int>("IdIngrediente")
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("EsOpcional")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAñadido")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdReceta", "IdIngrediente");

                    b.HasIndex("IdIngrediente");

                    b.ToTable("RecetaIngredientes");

                    b.HasData(
                        new
                        {
                            IdReceta = 1,
                            IdIngrediente = 1,
                            Cantidad = 100m,
                            EsOpcional = false,
                            FechaAñadido = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notas = ""
                        },
                        new
                        {
                            IdReceta = 2,
                            IdIngrediente = 2,
                            Cantidad = 200m,
                            EsOpcional = false,
                            FechaAñadido = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notas = ""
                        },
                        new
                        {
                            IdReceta = 3,
                            IdIngrediente = 3,
                            Cantidad = 50m,
                            EsOpcional = false,
                            FechaAñadido = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notas = ""
                        });
                });

            modelBuilder.Entity("RecetasRedondas.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Contraseña = "password",
                            Email = "john.doe@example.com",
                            EsAdmin = false,
                            FechaRegistro = new DateTime(2024, 9, 13, 11, 20, 37, 817, DateTimeKind.Local).AddTicks(5457),
                            Nombre = "John Doe"
                        });
                });

            modelBuilder.Entity("RecetasRedondas.Models.RecetaIngrediente", b =>
                {
                    b.HasOne("RecetasRedondas.Models.Ingrediente", null)
                        .WithMany()
                        .HasForeignKey("IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecetasRedondas.Models.Receta", null)
                        .WithMany()
                        .HasForeignKey("IdReceta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
